{"ast":null,"code":"import _classCallCheck from \"d:\\\\reactjspartatics\\\\reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\reactjspartatics\\\\reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\reactjspartatics\\\\reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\reactjspartatics\\\\reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\reactjspartatics\\\\reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\reactjspartatics\\\\reactjs\\\\src\\\\Playground.jsx\";\nimport React, { Component } from 'react';\n\nvar Playground =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Playground, _Component);\n\n  function Playground() {\n    _classCallCheck(this, Playground);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Playground).apply(this, arguments));\n  }\n\n  _createClass(Playground, [{\n    key: \"render\",\n    value: function render() {\n      var tempComp = '<div id=\"meta\">                  <label for=\"metaDescription\" title=\"Description can appear in search engines\\' search results pages\">Description of page content:</label>            <textarea name=\"metaDescription\" id=\"metaDescription\" placeholder=\"Make it nice and short, but descriptive. The description may appear in search engines\\' search results pages...\"></textarea>        <label for=\"metaKeywords\" title=\"Keywords may assist in search results\">Keywords related to page content:</label>        <textarea name=\"metaKeywords\" id=\"metaKeywords\" placeholder=\"Separate keywords or phrases with a comma (example: html code generator, generate html, ...)\"></textarea></div>';\n      var tempStyle = {\n        backgroundColor: 'blue',\n        padding: '20px',\n        color: 'red'\n      };\n      var markup = {\n        __html: tempComp\n      };\n      return [React.createElement(\"h1\", {\n        key: \"h1\",\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"This is profile card!\"), React.createElement(Sample, {\n        key: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        key: \"div1\",\n        style: tempStyle,\n        dangerouslySetInnerHTML: markup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(FunctionalComp, {\n        key: \"func1\",\n        no: 1,\n        flag: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), [1, 2, 3, 4].map(function (item, index) {\n        return React.createElement(FunctionalComp, {\n          key: 'item' + index,\n          no: item,\n          name: \"priyanka\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      })];\n    }\n  }]);\n\n  return Playground;\n}(Component);\n\nexport { Playground as default };\n\nvar Sample =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Sample, _Component2);\n\n  function Sample() {\n    _classCallCheck(this, Sample);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Sample).apply(this, arguments));\n  }\n\n  _createClass(Sample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Sample card\");\n    }\n  }]);\n\n  return Sample;\n}(Component);\n\nfunction FunctionalComp(props) {\n  var text = 'This is a good card'; //let fullText = text+' '+ props.no\n\n  var fullText = \"\".concat(text, \" \").concat(props.no);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"This is a profile card \", props.no), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, fullText));\n}","map":{"version":3,"sources":["d:\\reactjspartatics\\reactjs\\src\\Playground.jsx"],"names":["React","Component","Playground","tempComp","tempStyle","backgroundColor","padding","color","markup","__html","map","item","index","Sample","FunctionalComp","props","text","fullText","no"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,U;;;;;;;;;;;;;6BACR;AACL,UAAIC,QAAQ,GAAG,oqBAAf;AACA,UAAIC,SAAS,GAAG;AACZC,QAAAA,eAAe,EAAE,MADL;AAEZC,QAAAA,OAAO,EAAE,MAFG;AAGZC,QAAAA,KAAK,EAAE;AAHK,OAAhB;AAKA,UAAIC,MAAM,GAAG;AACTC,QAAAA,MAAM,EAAEN;AADC,OAAb;AAGA,aAAQ,CAEJ;AAAI,QAAA,GAAG,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFI,EAIJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJI,EAMJ;AAAK,QAAA,GAAG,EAAC,MAAT;AAAgB,QAAA,KAAK,EAAEC,SAAvB;AAAkC,QAAA,uBAAuB,EAAEI,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANI,EAOJ,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAC,OAApB;AAA4B,QAAA,EAAE,EAAE,CAAhC;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPI,EASJ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaE,GAAb,CAAiB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACpC,eAAO,oBAAC,cAAD;AAAgB,UAAA,GAAG,EAAE,SAASA,KAA9B;AAAqC,UAAA,EAAE,EAAED,IAAzC;AAA+C,UAAA,IAAI,EAAC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,CATI,CAAR;AAaH;;;;EAxBmCV,S;;SAAnBC,U;;IA2BfW,M;;;;;;;;;;;;;6BACO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;;;EAHgBZ,S;;AAMrB,SAASa,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,MAAIC,IAAI,GAAG,qBAAX,CAD2B,CAE3B;;AACA,MAAIC,QAAQ,aAAMD,IAAN,cAAcD,KAAK,CAACG,EAApB,CAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4BH,KAAK,CAACG,EAAlC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,QAAL,CAFJ,CADJ;AAMH","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Playground extends Component {\r\n    render() {\r\n        let tempComp = '<div id=\"meta\">                  <label for=\"metaDescription\" title=\"Description can appear in search engines\\' search results pages\">Description of page content:</label>            <textarea name=\"metaDescription\" id=\"metaDescription\" placeholder=\"Make it nice and short, but descriptive. The description may appear in search engines\\' search results pages...\"></textarea>        <label for=\"metaKeywords\" title=\"Keywords may assist in search results\">Keywords related to page content:</label>        <textarea name=\"metaKeywords\" id=\"metaKeywords\" placeholder=\"Separate keywords or phrases with a comma (example: html code generator, generate html, ...)\"></textarea></div>'\r\n        let tempStyle = {\r\n            backgroundColor: 'blue',\r\n            padding: '20px',\r\n            color: 'red'\r\n        }\r\n        let markup = {\r\n            __html: tempComp\r\n        }\r\n        return ([\r\n           \r\n            <h1 key='h1' className=\"heading\">This is profile card!</h1>,\r\n          \r\n            <Sample key='h2' />,\r\n           \r\n            <div key=\"div1\" style={tempStyle} dangerouslySetInnerHTML={markup}></div>,\r\n            <FunctionalComp key=\"func1\" no={1} flag=\"true\" />, \r\n           \r\n            [1, 2, 3, 4].map(function (item, index) {\r\n                return <FunctionalComp key={'item' + index} no={item} name=\"priyanka\" />\r\n            })\r\n        ])\r\n    }\r\n}\r\n\r\nclass Sample extends Component {\r\n    render() {\r\n        return <h2>Sample card</h2>\r\n    }\r\n}\r\n\r\nfunction FunctionalComp(props) {\r\n    let text = 'This is a good card'\r\n    //let fullText = text+' '+ props.no\r\n    let fullText = `${text} ${props.no}`\r\n    return (\r\n        <div>\r\n            <h3>This is a profile card {props.no}</h3>\r\n            <h4>{fullText}</h4>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}